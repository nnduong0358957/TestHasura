{"version":3,"sources":["actions/todoList.js","components/Item.js","components/TodoList.js","actions/users.js","components/Login.js","components/Register.js","routes.js","App.js","reportWebVitals.js","reducers/todoList.js","reducers/index.js","index.js"],"names":["api","_getResponse","getDoc","a","variables","fetch","method","body","JSON","stringify","query","response","json","TodoList","item","onClick","handleDeleteTask","className","status","name","icon","faTimesCircle","color","e","id","history","useHistory","loginUser","parse","localStorage","getItem","todoList","useSelector","state","dispatch","useDispatch","useState","newTask","setNewTask","initFetch","useCallback","loginUserId","errors","data","console","log","type","payload","users_by_pk","todos","useEffect","oldTodoList","taskChange","find","newTodoList","map","handleAddTask","newTaskName","userId","insert_todos_one","stopPropagation","forEach","index","splice","deleteTask","removeItem","push","faSignOutAlt","Item","placeholder","value","onChange","target","onKeyDown","event","key","login","userName","password","users","user","token","setItem","alert","register","some","err","message","insert_users_one","Login","isShowPass","setIsShowPass","setUserName","setPassword","_login","preventDefault","faUser","faEyeSlash","faEye","to","Register","fullName","setFullName","_register","routes","path","exact","main","App","checkLogin","publicPage","route","location","pathname","checkIsPublicPage","page","result","length","component","showContentMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d330dd8.chunk.js","sourcesContent":["const api = \"https://hasura-amhr.onrender.com/v1/graphql\";\r\n\r\nconst _getResponse = async (getDoc, variables = {}) => {\r\n  let response = await fetch(api, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      query: getDoc,\r\n      variables: variables,\r\n    }),\r\n  });\r\n  response = await response.json();\r\n\r\n  return response;\r\n};\r\n\r\n// @-----------------------------------------@\r\n\r\nexport const getTodoList = (loginUserId) => async (dispatch) => {\r\n  const variables = { id: loginUserId };\r\n  const getDoc = `\r\n      query MyQuery($id: uuid = \"\") {\r\n        users_by_pk(id: $id) {\r\n          id\r\n          name\r\n          password\r\n          todos(order_by: {created_at: asc}) {\r\n            id\r\n            name\r\n            status\r\n            created_at\r\n            updated_at\r\n            userId\r\n          }\r\n        }\r\n      }\r\n    `;\r\n\r\n  const response = await _getResponse(getDoc, variables);\r\n  const { errors, data } = response;\r\n\r\n  if (errors) {\r\n    console.log(errors);\r\n  } else {\r\n    dispatch({ type: \"UPDATE_TODOLIST\", payload: data.users_by_pk.todos });\r\n  }\r\n};\r\n\r\nexport const changeStatusTodo =\r\n  (id, status, oldTodoList) => async (dispatch) => {\r\n    const variables = { id: id, status: status };\r\n    const getDoc = `\r\n      mutation MyMutation($id: uuid = \"\", $status: Boolean = false) {\r\n        update_todos_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n    let response = await _getResponse(getDoc, variables);\r\n    const { errors } = response;\r\n\r\n    if (!errors) {\r\n      const newTodoList = oldTodoList.map((item) =>\r\n        item.id === id ? { ...item, status: !item.status } : item\r\n      );\r\n\r\n      dispatch({\r\n        type: \"UPDATE_TODOLIST\",\r\n        payload: newTodoList,\r\n      });\r\n    } else console.log(errors);\r\n  };\r\n\r\nexport const addTask = (newTaskName, userId) => async (dispatch) => {\r\n  const variables = { name: newTaskName, userId: userId };\r\n  const getDoc = `\r\n      mutation MyMutation($name: String = \"\", $userId: uuid = \"\") {\r\n        insert_todos_one(object: {name: $name, userId: $userId}) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n  let response = await _getResponse(getDoc, variables);\r\n  const { errors, data } = response;\r\n\r\n  if (!errors) {\r\n    dispatch({\r\n      type: \"INSERT_TODOLIST\",\r\n      payload: data.insert_todos_one,\r\n    });\r\n  } else console.log(errors);\r\n};\r\n\r\nexport const deleteTask = (id, oldTodoList) => async (dispatch) => {\r\n  const variables = { id: id };\r\n  const getDoc = `\r\n      mutation MyMutation($id: uuid = \"\") {\r\n        delete_todos_by_pk(id: $id) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n  let response = await _getResponse(getDoc, variables);\r\n  const { errors } = response;\r\n\r\n  if (!errors) {\r\n    let newTodoList = oldTodoList;\r\n    oldTodoList.forEach((item, index) => {\r\n      if (item.id === id) {\r\n        newTodoList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: \"UPDATE_TODOLIST\",\r\n      payload: newTodoList,\r\n    });\r\n  } else console.log(errors);\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TodoList({ item, onClick, handleDeleteTask }) {\r\n  return (\r\n    <div\r\n      className={`item pointer ${item.status ? \"done\" : \"\"}`}\r\n      onClick={() => onClick(item)}\r\n    >\r\n      <div className=\"itemContent\">{item.name}</div>\r\n      <FontAwesomeIcon\r\n        className=\"deleteBtn\"\r\n        icon={faTimesCircle}\r\n        color=\"red\"\r\n        onClick={(e) => handleDeleteTask(e, item.id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getTodoList,\r\n  changeStatusTodo,\r\n  addTask,\r\n  deleteTask,\r\n} from \"../actions/todoList.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Item from \"./Item.js\";\r\n\r\nfunction TodoList() {\r\n  const history = useHistory();\r\n  const loginUser = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n  const todoList = useSelector((state) => state.todoList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const initFetch = useCallback(() => {\r\n    if (loginUser) dispatch(getTodoList(loginUser.id));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    initFetch();\r\n  }, [initFetch]);\r\n\r\n  const onClick = (item) => {\r\n    const taskChange = todoList.find((e) => e.id === item.id);\r\n    dispatch(changeStatusTodo(taskChange.id, !taskChange.status, todoList));\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    setNewTask(\"\");\r\n    dispatch(addTask(newTask, loginUser.id));\r\n  };\r\n\r\n  const handleDeleteTask = (e, id) => {\r\n    e.stopPropagation();\r\n    dispatch(deleteTask(id, todoList));\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleAddTask();\r\n    }\r\n  };\r\n\r\n  const _logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/TestHasura/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"todoList\">\r\n      <div className=\"btn-logout pointer\" onClick={() => _logout()}>\r\n        <div>Log out</div>\r\n        <FontAwesomeIcon\r\n          className=\"logout-icon\"\r\n          icon={faSignOutAlt}\r\n          color=\"red\"\r\n          onClick={(e) => {}}\r\n        />\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"title\">TO DO</div>\r\n        {todoList.map((e) => (\r\n          <Item\r\n            item={e}\r\n            key={e.id}\r\n            onClick={onClick}\r\n            handleDeleteTask={handleDeleteTask}\r\n          />\r\n        ))}\r\n        <hr className=\"horizontal_divider\" />\r\n        <div className=\"addTask\">\r\n          <input\r\n            className=\"addInput\"\r\n            type=\"text\"\r\n            placeholder=\"+ New task\"\r\n            value={newTask}\r\n            onChange={(e) => setNewTask(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n          <button className=\"addBtn\" onClick={handleAddTask}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","const api = \"https://hasura-amhr.onrender.com/v1/graphql\";\r\n\r\nconst _getResponse = async (getDoc, variables = {}) => {\r\n  let response = await fetch(api, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      query: getDoc,\r\n      variables: variables,\r\n    }),\r\n  });\r\n  response = await response.json();\r\n\r\n  return response;\r\n};\r\n\r\n// @-----------------------------------------@\r\n\r\nexport const login = (userName, password) => async (dispatch) => {\r\n  const getDoc = `\r\n        query MyQuery {\r\n            users {\r\n            id\r\n            name\r\n            userName\r\n            password\r\n            }\r\n        }\r\n    `;\r\n\r\n  const response = await _getResponse(getDoc);\r\n  const { errors, data } = response;\r\n\r\n  const loginUser = data.users.find(\r\n    (user) => userName === user.userName && user.password === password\r\n  );\r\n\r\n  if (errors) {\r\n    console.log(errors);\r\n  } else {\r\n    if (loginUser) {\r\n      const token = JSON.stringify(loginUser);\r\n      await localStorage.setItem(\"token\", token);\r\n    } else {\r\n      alert(\"Sai tài khoản hoặc mật khẩu!\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const register = (name, userName, password) => async (dispatch) => {\r\n  const variables = { name: name, userName: userName, password: password };\r\n  const getDoc = `\r\n      mutation MyMutation($name: String = \"\", $userName: String = \"\", $password: String = \"\") {\r\n        insert_users_one(object: {name: $name, userName: $userName, password: $password}) {\r\n          id\r\n          name\r\n          userName\r\n          password\r\n        }\r\n      }\r\n    `;\r\n\r\n  const response = await _getResponse(getDoc, variables);\r\n  const { errors, data } = response;\r\n\r\n  if (errors) {\r\n    const duplicateUserName = errors.some(\r\n      (err) =>\r\n        err.message ===\r\n        'Uniqueness violation. duplicate key value violates unique constraint \"users_username_key\"'\r\n    );\r\n\r\n    if (duplicateUserName)\r\n      alert(\"Tên đăng nhập này đã tồn tại. Vui lòng đổi tên đăng nhập khác!\");\r\n    else console.log(errors);\r\n  } else {\r\n    const token = JSON.stringify(data.insert_users_one);\r\n    await localStorage.setItem(\"token\", token);\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/users.js\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  const [isShowPass, setIsShowPass] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const _login = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(login(userName, password));\r\n    if (localStorage.getItem(\"token\")) history.push(\"/TestHasura\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-center\">\r\n      <h1 className=\"title\">Login</h1>\r\n      <form className=\"form\">\r\n        <div className=\"label-input\">User name:</div>\r\n        <div className=\"Icon-inside\">\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <FontAwesomeIcon className=\"input-icon\" icon={faUser} />\r\n        </div>\r\n        <div className=\"label-input mt\">Password:</div>\r\n        <div className=\"Icon-inside\">\r\n          <input\r\n            className=\"input-field\"\r\n            id=\"password\"\r\n            type={isShowPass ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"input-icon pointer\"\r\n            icon={isShowPass ? faEyeSlash : faEye}\r\n            onClick={() => {\r\n              setIsShowPass(!isShowPass);\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn-login pointer\"\r\n          onClick={(e) => {\r\n            _login(e);\r\n          }}\r\n        >\r\n          Login\r\n        </button>\r\n\r\n        <Link className=\"switch-login-register\" to=\"/TestHasura/register\">\r\n          Register\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/users.js\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  const [isShowPass, setIsShowPass] = useState(false);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const _register = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(register(fullName, userName, password));\r\n    if (localStorage.getItem(\"token\")) history.push(\"/TestHasura\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-center\">\r\n      <h1 className=\"title\">Register</h1>\r\n      <form className=\"form\">\r\n        <div className=\"label-input\">Name:</div>\r\n        <div className=\"Icon-inside\">\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"label-input mt\">User name:</div>\r\n        <div className=\"Icon-inside\">\r\n          <input\r\n            className=\"input-field\"\r\n            type=\"text\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n          <FontAwesomeIcon className=\"input-icon\" icon={faUser} />\r\n        </div>\r\n        <div className=\"label-input mt\">Password:</div>\r\n        <div className=\"Icon-inside\">\r\n          <input\r\n            className=\"input-field\"\r\n            id=\"password\"\r\n            type={isShowPass ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"input-icon pointer\"\r\n            icon={isShowPass ? faEyeSlash : faEye}\r\n            onClick={() => {\r\n              setIsShowPass(!isShowPass);\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn-login pointer\"\r\n          onClick={(e) => {\r\n            _register(e);\r\n          }}\r\n        >\r\n          Register\r\n        </button>\r\n\r\n        <Link className=\"switch-login-register\" to=\"/TestHasura/login\">\r\n          Back\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/TestHasura\",\r\n    exact: true,\r\n    main: () => <TodoList />,\r\n  },\r\n  {\r\n    path: \"/TestHasura/login\",\r\n    exact: true,\r\n    main: () => <Login />,\r\n  },\r\n  {\r\n    path: \"/TestHasura/register\",\r\n    exact: true,\r\n    main: () => <Register />,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nfunction App() {\n  const history = useHistory();\n\n  const showContentMenu = (routes) => {\n    var result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={route.main}\n          />\n        );\n      });\n    }\n\n    return result;\n  };\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      const publicPage = [\"/login\", \"/register\"];\n      const loginUser = await localStorage.getItem(\"token\");\n\n      const checkIsValidPage = routes.some(\n        (route) => route.path === history.location.pathname\n      );\n\n      if (checkIsValidPage) {\n        const checkIsPublicPage = publicPage.some(\n          (page) => page === history.location.pathname\n        );\n\n        if (loginUser && checkIsPublicPage) {\n          history.push(\"/TestHasura\");\n        }\n\n        if (!loginUser && !checkIsPublicPage) {\n          history.push(\"/login\");\n        }\n      } else {\n        if (loginUser) history.push(\"/TestHasura\");\n        else history.push(\"/login\");\n      }\n    };\n\n    checkLogin();\n  }, [history]);\n\n  return (\n    <div className=\"all\">\n      <div className=\"App\">\n        <Switch>{showContentMenu(routes)}</Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const todoList = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_TODOLIST\": {\r\n      return [...action.payload];\r\n    }\r\n    case \"INSERT_TODOLIST\":\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoList;\r\n","import { combineReducers } from \"redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport todoList from \"./todoList.js\";\r\n\r\nconst allReducers = combineReducers({\r\n  todoList,\r\n  // add more reducers here\r\n});\r\nconst store = createStore(allReducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reducers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}