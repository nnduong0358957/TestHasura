{"version":3,"sources":["actions/fetchAPI.js","components/Item.js","components/TodoList.js","App.js","reportWebVitals.js","reducers/fetchAPI.js","reducers/index.js","index.js"],"names":["api","_getResponse","getDoc","a","variables","fetch","method","body","JSON","stringify","query","response","json","TodoList","item","onClick","handleDeleteTask","className","status","name","icon","faTimesCircle","color","e","id","todoList","useSelector","state","dispatch","useDispatch","useState","newTask","setNewTask","initFetch","useCallback","errors","data","console","log","type","payload","todos","useEffect","oldTodoList","taskChange","find","newTodoList","map","handleAddTask","newTaskName","userId","insert_todos_one","stopPropagation","forEach","index","splice","deleteTask","placeholder","value","onChange","target","onKeyDown","event","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.934248c7.chunk.js","sourcesContent":["const api = \"http://localhost:4000/v1/graphql\";\r\n\r\nconst _getResponse = async (getDoc, variables = {}) => {\r\n  let response = await fetch(api, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      query: getDoc,\r\n      variables: variables,\r\n    }),\r\n  });\r\n  response = await response.json();\r\n\r\n  return response;\r\n};\r\n\r\n// @-----------------------------------------@\r\n\r\nexport const getTodoList = () => async (dispatch) => {\r\n  const getDoc = `\r\n      query MyQuery {\r\n        todos(order_by: {created_at: asc}) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n  const response = await _getResponse(getDoc);\r\n  const { errors, data } = response;\r\n\r\n  if (errors) {\r\n    console.log(errors);\r\n  } else {\r\n    dispatch({ type: \"UPDATE_TODOLIST\", payload: data.todos });\r\n  }\r\n};\r\n\r\nexport const changeStatusTodo =\r\n  (id, status, oldTodoList) => async (dispatch) => {\r\n    const variables = { id: id, status: status };\r\n    const getDoc = `\r\n      mutation MyMutation($id: uuid = \"\", $status: Boolean = false) {\r\n        update_todos_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n    let response = await _getResponse(getDoc, variables);\r\n    const { errors } = response;\r\n\r\n    if (!errors) {\r\n      const newTodoList = oldTodoList.map((item) =>\r\n        item.id === id ? { ...item, status: !item.status } : item\r\n      );\r\n\r\n      dispatch({\r\n        type: \"UPDATE_TODOLIST\",\r\n        payload: newTodoList,\r\n      });\r\n    } else console.log(errors);\r\n  };\r\n\r\nexport const addTask = (newTaskName, userId) => async (dispatch) => {\r\n  const variables = { name: newTaskName, userId: userId };\r\n  const getDoc = `\r\n      mutation MyMutation($name: String = \"\", $userId: uuid = \"\") {\r\n        insert_todos_one(object: {name: $name, userId: $userId}) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n  let response = await _getResponse(getDoc, variables);\r\n  const { errors, data } = response;\r\n\r\n  if (!errors) {\r\n    dispatch({\r\n      type: \"INSERT_TODOLIST\",\r\n      payload: data.insert_todos_one,\r\n    });\r\n  } else console.log(errors);\r\n};\r\n\r\nexport const deleteTask = (id, oldTodoList) => async (dispatch) => {\r\n  const variables = { id: id };\r\n  const getDoc = `\r\n      mutation MyMutation($id: uuid = \"\") {\r\n        delete_todos_by_pk(id: $id) {\r\n          id\r\n          name\r\n          status\r\n          userId\r\n          created_at\r\n          updated_at\r\n        }\r\n      }\r\n    `;\r\n\r\n  let response = await _getResponse(getDoc, variables);\r\n  const { errors } = response;\r\n\r\n  if (!errors) {\r\n    let newTodoList = oldTodoList;\r\n    oldTodoList.forEach((item, index) => {\r\n      if (item.id === id) {\r\n        newTodoList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: \"UPDATE_TODOLIST\",\r\n      payload: newTodoList,\r\n    });\r\n  } else console.log(errors);\r\n};\r\n","import \"../css/Item.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TodoList({ item, onClick, handleDeleteTask }) {\r\n  return (\r\n    <div\r\n      className={`item ${item.status ? \"done\" : \"\"}`}\r\n      onClick={() => onClick(item)}\r\n    >\r\n      <div className=\"itemContent\">{item.name}</div>\r\n      <FontAwesomeIcon\r\n        className=\"deleteBtn\"\r\n        icon={faTimesCircle}\r\n        color=\"red\"\r\n        onClick={(e) => handleDeleteTask(e, item.id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport \"../css/TodoList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getTodoList,\r\n  changeStatusTodo,\r\n  addTask,\r\n  deleteTask,\r\n} from \"../actions/fetchAPI.js\";\r\n\r\nimport Item from \"./Item.js\";\r\n\r\nfunction TodoList() {\r\n  const todoList = useSelector((state) => state.todoList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const initFetch = useCallback(() => {\r\n    dispatch(getTodoList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    initFetch();\r\n  }, [initFetch]);\r\n\r\n  const onClick = (item) => {\r\n    const taskChange = todoList.find((e) => e.id === item.id);\r\n    dispatch(changeStatusTodo(taskChange.id, !taskChange.status, todoList));\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    setNewTask(\"\");\r\n    dispatch(addTask(newTask, \"0c5d5099-f7b5-47ed-b930-4a8d054c2d79\"));\r\n  };\r\n\r\n  const handleDeleteTask = (e, id) => {\r\n    e.stopPropagation();\r\n    dispatch(deleteTask(id, todoList));\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleAddTask();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"title\">TO DO</div>\r\n        {todoList.map((e) => (\r\n          <Item\r\n            item={e}\r\n            key={e.id}\r\n            onClick={onClick}\r\n            handleDeleteTask={handleDeleteTask}\r\n          />\r\n        ))}\r\n        <hr className=\"horizontal_divider\" />\r\n        <div className=\"addTask\">\r\n          <input\r\n            className=\"addInput\"\r\n            type=\"text\"\r\n            placeholder=\"+ New task\"\r\n            value={newTask}\r\n            onChange={(e) => setNewTask(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n          <button className=\"addBtn\" onClick={handleAddTask}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\n\nimport TodoList from \"./components/TodoList.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const todoList = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_TODOLIST\": {\r\n      return [...action.payload];\r\n    }\r\n    case \"INSERT_TODOLIST\":\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoList;\r\n","import { combineReducers } from \"redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport todoList from \"./fetchAPI.js\";\r\n\r\nconst allReducers = combineReducers({\r\n  todoList,\r\n  // add more reducers here\r\n});\r\nconst store = createStore(allReducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}